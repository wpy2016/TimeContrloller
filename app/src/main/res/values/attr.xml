<?xml version="1.0" encoding="utf-8"?>
<resources>

    <declare-styleable name="CircleIndicator">
        <attr name="ci_width" format="dimension" />
        <attr name="ci_height" format="dimension" />
        <attr name="ci_margin" format="dimension" />
        <attr name="ci_animator" format="reference" />
        <attr name="ci_animator_reverse" format="reference" />
        <attr name="ci_drawable" format="reference" />
        <attr name="ci_drawable_unselected" format="reference" />
        <attr name="ci_orientation" format="enum"><!-- Defines an horizontal widget. -->
            <enum name="horizontal" value="0" /><!-- Defines a vertical widget. -->
            <enum name="vertical" value="1" />
        </attr>
        <attr name="ci_gravity"><!-- Push object to the top of its container, not changing its size.
-->
            <flag name="top" value="0x30" /><!-- Push object to the bottom of its container, not changing its size.
-->
            <flag name="bottom" value="0x50" /><!-- Push object to the left of its container, not changing its size.
-->
            <flag name="left" value="0x03" /><!-- Push object to the right of its container, not changing its size.
-->
            <flag name="right" value="0x05" /><!-- Place object in the vertical center of its container, not changing its size.
-->
            <flag name="center_vertical" value="0x10" /><!-- Grow the vertical size of the object if needed so it completely fills its container.
-->
            <flag name="fill_vertical" value="0x70" /><!-- Place object in the horizontal center of its container, not changing its size.
-->
            <flag name="center_horizontal" value="0x01" /><!-- Grow the horizontal size of the object if needed so it completely fills its container.
-->
            <flag name="fill_horizontal" value="0x07" /><!-- Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.
-->
            <flag name="center" value="0x11" /><!-- Grow the horizontal and vertical size of the object if needed so it completely fills its container.
-->
            <flag name="fill" value="0x77" /><!-- Additional option that can be set to have the top and/or bottom edges of
            the child clipped to its container's bounds.
            The clip will be based on the vertical gravity: a top gravity will clip the bottom
            edge, a bottom gravity will clip the top edge, and neither will clip both edges.
-->
            <flag name="clip_vertical" value="0x80" /><!-- Additional option that can be set to have the left and/or right edges of
            the child clipped to its container's bounds.
            The clip will be based on the horizontal gravity: a left gravity will clip the right
            edge, a right gravity will clip the left edge, and neither will clip both edges.
-->
            <flag name="clip_horizontal" value="0x08" /><!-- Push object to the beginning of its container, not changing its size.
-->
            <flag name="start" value="0x00800003" /><!-- Push object to the end of its container, not changing its size.
-->
            <flag name="end" value="0x00800005" />
        </attr>
    </declare-styleable>

    <declare-styleable name="WheelView">
        <attr name="normalTextColor" format="color" />
        <attr name="normalTextSize" format="dimension" />
        <attr name="selectedTextColor" format="color" />
        <attr name="selectedTextSize" format="dimension" />
        <attr name="unitHight" format="dimension" />
        <attr name="itemNumber" format="integer"/>
        <attr name="lineColor" format="color" />
        <attr name="bottomLineColor" format="color" />
        <attr name="lineHeight" format="dimension" />
        <attr name="firstLineAndSecondLineSpace" format="dimension" />
        <attr name="maskHight" format="dimension"/>
        <attr name="noEmpty" format="boolean"/>
        <attr name="isEnable" format="boolean"/>
    </declare-styleable>

    <declare-styleable name="TimePicker">
        <attr name="layout_id" format="reference"/>
    </declare-styleable>


    <declare-styleable name="AVLoadingIndicatorView">
        <attr name="indicator">
            <flag name="BallPulse" value="0"/>
            <flag name="BallGridPulse" value="1"/>
            <flag name="BallClipRotate" value="2"/>
            <flag name="BallClipRotatePulse" value="3"/>
            <flag name="SquareSpin" value="4"/>
            <flag name="BallClipRotateMultiple" value="5"/>
            <flag name="BallPulseRise" value="6"/>
            <flag name="BallRotate" value="7"/>
            <flag name="CubeTransition" value="8"/>
            <flag name="BallZigZag" value="9"/>
            <flag name="BallZigZagDeflect" value="10"/>
            <flag name="BallTrianglePath" value="11"/>
            <flag name="BallScale" value="12"/>
            <flag name="LineScale" value="13"/>
            <flag name="LineScaleParty" value="14"/>
            <flag name="BallScaleMultiple" value="15"/>
            <flag name="BallPulseSync" value="16"/>
            <flag name="BallBeat" value="17"/>
            <flag name="LineScalePulseOut" value="18"/>
            <flag name="LineScalePulseOutRapid" value="19"/>
            <flag name="BallScaleRipple" value="20"/>
            <flag name="BallScaleRippleMultiple" value="21"/>
            <flag name="BallSpinFadeLoader" value="22"/>
            <flag name="LineSpinFadeLoader" value="23"/>
            <flag name="TriangleSkewSpin" value="24"/>
            <flag name="Pacman" value="25"/>
            <flag name="BallGridBeat" value="26"/>
            <flag name="SemiCircleSpin" value="27"/>
        </attr>
        <attr name="indicator_color" format="color"/>
    </declare-styleable>

</resources>